<?php
// 墓穴申购管理

/*
 * 新购申请
 */
function handle_order_buy($this, $request, $response, $args) {
	$auth = new AuthObject ( $_COOKIE ['token'] );
	$user = new UserObject ( $auth->userid );
	
	if (strpos ( $user->allow, 'admin' ) === FALSE && strpos ( $user->allow, 'datawrite' )=== FALSE) {
		return $response->withStatus ( 403 );
	}
	
	if (! key_exists ( 'cu_id', $_POST ) || ! key_exists ( 'zone', $_POST ) || ! key_exists ( 'row', $_POST ) || ! key_exists ( 'col', $_POST ) || ! key_exists ( 'death_name', $_POST ) || ! key_exists ( 'date', $_POST ) || ! key_exists ( 'comment', $_POST ))
		return $response->withStatus ( 404 );
	$sql = "update tomb set customerid = {$_POST['cu_id']}, death_name = '{$_POST['death_name']}', requestdate='{$_POST['date']}',comment='{$_POST['comment']}', statuscode =2 ,status='已申请' where zone = {$_POST['zone']} and row = {$_POST['row']} and col = {$_POST['col']} and (statuscode=1 or customerid={$_POST['cu_id']})";
	$db = new DataBase ();
	$affectedrow = $db->execute ( $sql );
	return $response->getBody ()->write ( json_encode ( [ 
			'status' => $affectedrow,
			'msg'=>($affectedrow == 0?"客户或墓位不存在或墓位非空闲":"新购成功")
	] ) );
}
/*
 * 新购删除（退墓）
 */
function handle_order_delete($this, $request, $response, $args) {
	$auth = new AuthObject ( $_COOKIE ['token'] );
	$user = new UserObject ( $auth->userid );
	
	if (strpos ( $user->allow, 'admin' ) === FALSE && strpos ( $user->allow, 'datawrite' )===FALSE) {
		return $response->withStatus ( 403 );
	}
	if (! key_exists ( 'zone', $_POST ) || ! key_exists ( 'row', $_POST ) || ! key_exists ( 'col', $_POST ))
		return $response->withStatus ( 404 );
	
	$sql = "update tomb set comment=NULL,statuscode = 1, status = '空置',customerid = NULL, death_name = NULL, requestdate=NULL, validdate = NULL, burystatus=2, burydate=NULL where zone={$_POST['zone']} and row={$_POST['row']} and col={$_POST['col']}";
	$db = new DataBase ();
	$affectedrow = $db->execute ( $sql );
	return $response->getBody ()->write ( json_encode ( [ 
			'status' => $affectedrow 
	] ) );
}

/*
 * 新购查询
 */
function handle_order_info($this, $request, $response, $args) {
	// get 方法
	$auth = new AuthObject ( $_COOKIE ['token'] );
	$user = new UserObject ( $auth->userid );
	
	if (strpos ( $user->allow, 'admin' ) === FALSE && strpos ( $user->allow, 'dataread' ) === FALSE) {
		return $response->withStatus ( 403 );
	}
	if (! key_exists ( 'cu_id', $_GET ))
		return $response->withStatus ( 404 );
	$sql = "select * from tomb where customerid= {$_GET['cu_id']}";
	$db = new DataBase ();
	$result = $db->pdo->query ( $sql );
	if ($result === FALSE) { // no information
		$response->getBody ()->write ( json_encode ( [ ] ) );
	} else {
		$result = $result->fetchAll ( PDO::FETCH_ASSOC );
		$body = [ ];
		foreach ( $result as $row ) {
			$body [] = [ 
					'zone' => $row ['zone'],
					'tombtype' => $row ['tombtype'],
					'row' => $row ['row'],
					'col' => $row ['col'],
					'dealprice' => $row ['dealprice'] 
			];
		}
		$response->getBody ()->write ( json_encode ( $body ) );
	}
	return $response;
}

/*
 * 墓位预定，新购预定
 */
function handle_order_book($this, $request, $response, $args) {
	$auth = new AuthObject ( $_COOKIE ['token'] );
	$user = new UserObject ( $auth->userid );
	
	if (strpos ( $user->allow, 'admin' ) === FALSE && strpos ( $user->allow, 'datawrite' ) === FALSE) {
		return $response->withStatus ( 403 );
	}
	
	if (! key_exists ( 'cu_id', $_POST ) || ! key_exists ( 'date', $_POST ) || ! key_exists ( 'validdate', $_POST ) || ! key_exists ( 'comment', $_POST ) || ! key_exists ( 'zone', $_POST ) || ! key_exists ( 'row', $_POST ) || ! key_exists ( 'col', $_POST ))
		return $response->withStatus ( 404 );
	$sql = "update tomb set customerid = {$_POST['cu_id']}, requestdate = '{$_POST['date']}', validdate = '{$_POST['validdate']}',comment='{$_POST['comment']}',statuscode =4 ,status='已预订' where zone={$_POST['zone']} and row={$_POST['row']} and col={$_POST['col']} and statuscode=1";
	$db = new DataBase ();
	$affectedrow = $db->execute ( $sql );
	return $response->getBody ()->write ( json_encode ( [ 
			'status' => $affectedrow,
			'msg'=>$affectedrow==0?"客户或墓位不存在或墓位非空闲":"预定成功"
	] ) );
}

/*
 * 墓位转让
 * */
function handle_order_transfer($this,$request, $response, $args){
	$auth = new AuthObject ( $_COOKIE ['token'] );
	$user = new UserObject ( $auth->userid );
	
	if (strpos ( $user->allow, 'admin' ) === FALSE && strpos ( $user->allow, 'datawrite' ) === FALSE) {
		return $response->withStatus ( 403 );
	}
	
	if (! key_exists ( 'zone', $_POST ) || ! key_exists ( 'row', $_POST ) || ! key_exists ( 'col', $_POST ) || ! key_exists ( 'cua_rid', $_POST ) || ! key_exists ( 'cub_name', $_POST ) )
		return $response->withStatus ( 404 );
	$cua = new CustomerObject($_POST['cua_rid']);
	if($cua->id == null){
		return $response->getBody ()->write ( json_encode ( [
				'status' => 0,
				'msg'=>"转出客户rid不存在"
		] ) );
	}
	// 墓穴
	$tomb = new TombObject($_POST['zone'],$_POST['row'],$_POST['col']);
	//首先新建客户B
	$cub = new CustomerObject($cua->rid."_".$tomb->id);
	$cub->cu_name = $_POST['cub_name'];
	$aff =  $cub->create_or_update();//插入数据库
	echo $aff;
	$cub->initialize_with_rid($cub->rid);
	echo $cub->rid;
	$date = date ( "Y-m-d", $_SERVER ['REQUEST_TIME'] );
	$sql = "update tomb set customerid = {$cub->id}, requestdate='{$date}', statuscode =2 ,status='已申请' where zone = {$_POST['zone']} and row = {$_POST['row']} and col = {$_POST['col']} and customerid={$cua->id}";
	echo $sql;
	$db = new DataBase ();
	$affectedrow = $db->execute ( $sql );
	return $response->getBody ()->write ( json_encode ( [
			'status' => $affectedrow==0?0:$affectedrow,
			'msg'=>$affectedrow==0?"墓位不存在或不被转出客户所有":"转让成功",
			'cub_rid'=>$affectedrow==0?"":$cub->rid
	] ) );
}